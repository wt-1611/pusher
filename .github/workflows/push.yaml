name: sync docker
on: push


env:
  USER: "${{ secrets.ALIYUNUSER }}"
  PASS: "${{ secrets.ALIYUNPASS}}"
  REGISTRY: "${{ secrets.ALIYUNREGISTRY }}"
  NAMESPACE: "${{ secrets.ALIYUNNAMESPACE }}"

jobs:
  pushtodocker:
    name: push
    runs-on: ubuntu-latest
    steps:
    - name: Read warehouse configuration
      uses: actions/checkout@v4

    - name: Docker Setup Buildx
      uses: docker/setup-buildx-action@v3

    - name: pull and push
      run: |

        docker login -u $USER -p $PASS $REGISTRY

        echo "need image list:"
          cat image.txt && echo

        docker images

        for line in $(cat image.txt); do
          echo $line
            if [ ! -z $line ];then
                echo $line |grep '@sha' &>/dev/null
                if [ $? -ne 0 ];then
                eval $(echo $line | awk -F'/' '{print $NF}'|awk -F':' '{print "IMAGE="$1,"TAG="$2}')
                else
                eval $(echo $line | awk -F'/' '{print $NF}'|awk -F'@' '{print $1}' | awk -F ':' '{print "IMAGE="$1,"TAG="$2}')
                fi
                echo "download image:$line"
                  docker pull $line
                  echo
                  echo "################################"
                  echo "$IMAGE-$TAG"
                  echo "################################"
                  echo
                  imageid=$(docker image ls |grep "${IMAGE}" |grep "${TAG}" | awk '{print $3}')
                  echo $imageid
                  dest="${REGISTRY}/${NAMESPACE}/${IMAGE}:${TAG}"
                  
                echo "tag: $imageid to $dest"
                  docker tag $imageid $dest

                echo "push: $dest"
                  docker push $dest  && echo "push successful to $dest" 
            fi
        done
        
